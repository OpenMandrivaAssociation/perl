diff -up perl-5.26.2/pp_sys.c.p73~ perl-5.26.2/pp_sys.c
--- perl-5.26.2/pp_sys.c.p73~	2018-04-16 22:06:36.683248748 +0200
+++ perl-5.26.2/pp_sys.c	2018-04-16 22:06:36.685248748 +0200
@@ -4375,14 +4375,18 @@ PP(pp_system)
     int result;
 # endif
 
+    while (++MARK <= SP) {
+	SV *origsv = *MARK;
+	STRLEN len;
+	char *pv;
+	pv = SvPV(origsv, len);
+	*MARK = newSVpvn_flags(pv, len,
+		    (SvFLAGS(origsv) & SVf_UTF8) | SVs_TEMP);
+    }
+    MARK = ORIGMARK;
+
     if (TAINTING_get) {
 	TAINT_ENV();
-	while (++MARK <= SP) {
-	    (void)SvPV_nolen_const(*MARK);      /* stringify for taint check */
-	    if (TAINT_get)
-		break;
-	}
-	MARK = ORIGMARK;
 	TAINT_PROPER("system");
     }
     PERL_FLUSHALL_FOR_CHILD;
diff -up perl-5.26.2/t/op/exec.t.p73~ perl-5.26.2/t/op/exec.t
--- perl-5.26.2/t/op/exec.t.p73~	2018-03-23 20:34:42.000000000 +0100
+++ perl-5.26.2/t/op/exec.t	2018-04-16 22:06:49.586249413 +0200
@@ -36,7 +36,7 @@ $ENV{LANGUAGE} = 'C';		# Ditto in GNU.
 my $Is_VMS   = $^O eq 'VMS';
 my $Is_Win32 = $^O eq 'MSWin32';
 
-plan(tests => 34);
+plan(tests => 37);
 
 my $Perl = which_perl();
 
@@ -177,6 +177,19 @@ TODO: {
         "exec failure doesn't terminate process");
 }
 
+package CountRead {
+    sub TIESCALAR { bless({ n => 0 }, $_[0]) }
+    sub FETCH { ++$_[0]->{n} }
+}
+my $cr;
+tie $cr, "CountRead";
+is system($^X, "-e", "exit(\$ARGV[0] eq '1' ? 0 : 1)", $cr), 0,
+    "system args have magic processed exactly once";
+is tied($cr)->{n}, 1, "system args have magic processed before fork";
+
+is system($^X, "-e", "exit(\$ARGV[0] eq \$ARGV[1] ? 0 : 1)", "$$", $$), 0,
+    "system args have magic processed before fork";
+
 my $test = curr_test();
 exec $Perl, '-le', qq{${quote}print 'ok $test - exec PROG, LIST'${quote}};
 fail("This should never be reached if the exec() worked");
